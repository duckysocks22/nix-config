# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/3a29b124-8003-4f0b-a38a-35a2418be5f7";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/3D47-B972";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/extra" =
    { device = "/dev/disk/by-uuid/40c050b4-0056-4162-923a-4b2d74f8bff1";
      fsType = "ext4";
    };

  fileSystems."/plus" =
    { device = "/dev/disk/by-uuid/dbabaf50-0581-4e5a-a790-e8d9598769c2";
      fsType = "ext4";
    };

  fileSystems."/ssd2" =
    { device = "/dev/disk/by-uuid/46b411fa-5c7e-46ff-96e2-f313f0ddf673";
      fsType = "ext4";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/193148f0-b69e-4c0f-a228-e97709f11bcd"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp34s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp36s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
